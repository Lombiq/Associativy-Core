@model Associativy.FrontendEngines.ViewModels.IGraphResultViewModel
           
@{
    Script.Require("JIT").AtHead();
    
    // It is necessary to keep track of added edges so an edge is added only in one direction
    var edgeRegister = new Dictionary<string, bool>(Model.Nodes.Count);
    string edges = "";
}

<script type="text/javascript">
$(document).ready(function(){
	var g = new Graph();
    @foreach (var nodeItem in Model.Nodes)
    {
        var node = nodeItem.Value;
        @: g.addNode("@node.Id", { label : "@Html.Raw(node.Label)" }); @*Without Html.Raw() the output would be encoded, non-ASCII characters too*@
        foreach (var id in node.NeighbourIds)
        {
            var key = Math.Min(node.Id, id).ToString() + " " + Math.Max(node.Id, id).ToString();
            if (!edgeRegister.ContainsKey(key))
            {
                edgeRegister[key] = true;
                edges += "g.addEdge(\"" + node.Id + "\", \"" + id + "\");";
            }
        }
    }

    @Html.Raw(edges);
	
	var layouter = new Graph.Layout.Spring(g);
	layouter.layout();
	 
	var renderer = new Graph.Renderer.Raphael("canvas", g, 900, 1000);
	renderer.draw();
});
</script>
<div id="canvas">
</div>
